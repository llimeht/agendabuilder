name: Unit Tests

on:
  [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  Unit-Tests:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]

    steps:

    - name: Obtain source from git
      uses: actions/checkout@v1

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    ### Caching of pip downloads and local wheel builds

    - name: Obtain pip cache (Linux)
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/test.yml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    ### Installation of build-dependencies

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Build and install package
      run: |
        python -m pip install .

    - name: Install checkers
      run: |
        python -m pip install pytest

    - name: Run unit tests
      run: |
        py.test -v -rsx agendabuilder
